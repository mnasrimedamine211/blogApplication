{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../search.service\";\nimport * as i2 from \"@angular/forms\";\nexport class NavbarComponent {\n  constructor(searchService) {\n    this.searchService = searchService;\n    this.inputValue = '';\n  }\n  onValueChange(value) {\n    this.inputValue = value;\n    this.searchService.updateData(value);\n  }\n}\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.SearchService));\n};\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 8,\n  vars: 1,\n  consts: [[1, \"navbar\"], [\"href\", \"\"], [\"href\", \"addBlog\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \" Blog Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"a\", 1);\n      i0.ɵɵtext(4, \"Blogs\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"a\", 2);\n      i0.ɵɵtext(6, \"Add blog\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function NavbarComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.inputValue = $event;\n      })(\"ngModelChange\", function NavbarComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.onValueChange($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.inputValue);\n    }\n  },\n  dependencies: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\".navbar[_ngcontent-%COMP%] {\\n    overflow: hidden;\\n    background-color: #333;\\n    position: fixed;\\n    top: 0;\\n    width: 100%;\\n    z-index: 9999;\\n}\\n\\n.navbar[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n    color: white;\\n}\\n\\n.navbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n    float: left;\\n    display: block;\\n    color: #f2f2f2;\\n    text-align: center;\\n    padding: 14px 16px;\\n    text-decoration: none;\\n    font-size: 17px;\\n}\\n\\n.navbar[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n    background: #ddd;\\n    color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2YsTUFBTTtJQUNOLFdBQVc7SUFDWCxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxjQUFjO0lBQ2QsY0FBYztJQUNkLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIge1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzMzMztcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6IDk5OTk7XG59XG5cbi5uYXZiYXIgaDEge1xuICAgIGNvbG9yOiB3aGl0ZTtcbn1cblxuLm5hdmJhciBhIHtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjogI2YyZjJmMjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogMTRweCAxNnB4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXNpemU6IDE3cHg7XG59XG5cbi5uYXZiYXIgYTpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2RkZDtcbiAgICBjb2xvcjogYmxhY2s7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,eAAe;EAE1BC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IADjC,eAAU,GAAG,EAAE;EACoC;EACnDC,aAAa,CAACC,KAAa;IACzB,IAAI,CAACC,UAAU,GAAGD,KAAK;IACvB,IAAI,CAACF,aAAa,CAACI,UAAU,CAACF,KAAK,CAAC;EACtC;;AANWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCR5BC,8BAAoB;MACXA,iCAAgB;MAAAA,iBAAK;MAC1BA,4BAAW;MAAAA,qBAAK;MAAAA,iBAAI;MACpBA,4BAAkB;MAAAA,wBAAQ;MAAAA,iBAAI;MAC9BA,gCAAoF;MAAjEA;QAAA;MAAA,EAAwB;QAAA,OAAkBC,yBAAqB;MAAA,EAAvC;MAA3CD,iBAAoF;;;MAAjEA,eAAwB;MAAxBA,wCAAwB","names":["NavbarComponent","constructor","searchService","onValueChange","value","inputValue","updateData","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/sabrina/Desktop/mini-project/blogApplication/src/app/navbar/navbar.component.ts","/Users/sabrina/Desktop/mini-project/blogApplication/src/app/navbar/navbar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SearchService } from '../search.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  inputValue = '';\n  constructor(private searchService: SearchService) {}\n  onValueChange(value: string ) {\n    this.inputValue = value;\n    this.searchService.updateData(value);\n  }\n}\n","<div class=\"navbar\">\n    <h1> Blog Application</h1>\n    <a href=\"\">Blogs</a>\n    <a href=\"addBlog\">Add blog</a>\n    <input type=\"text\" [(ngModel)]=\"inputValue\" (ngModelChange)=\"onValueChange($event)\">\n  </div>\n  \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}