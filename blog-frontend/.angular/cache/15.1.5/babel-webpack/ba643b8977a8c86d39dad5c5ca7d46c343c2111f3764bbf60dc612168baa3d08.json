{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BlogService {\n  constructor(http) {\n    this.http = http;\n  }\n  /*  getListOfBlog() {\n     return [\n       {\n         id: 1,\n         title: 'blog1',\n         description: 'test technique on angular for create a new project of blog i create this for learn angular',\n         author: 'Elya data',\n         like: 10,\n         dislike: 14\n       },\n       {\n         id: 2,\n         title: 'blog2',\n         description: 'test technique on angular for create a new project of blog i create this for learn angular',\n         author: 'mohamed amine',\n         like: 20,\n         dislike: 14\n       },\n       {\n         id: 3,\n         title: 'blog3',\n         description: 'test technique on angular for create a new project of blog i create this for learn angular',\n         author: 'Cecilia ',\n         like: 40,\n         dislike: 14\n       },\n       {\n         id: 4,\n         title: 'blog4',\n         description: 'test technique on angular for create a new project of blog i create this for learn angular',\n         author: 'Michael jackson',\n         like: 5,\n         dislike: 14\n       },\n       {\n         id: 5,\n         title: 'blog5',\n         description: 'test technique on angular for create a new project of blog i create this for learn angular',\n         author: 'Bitcoin',\n         like: 16,\n         dislike: 14\n       }\n     ]\n   } */\n  getBlogs() {\n    return this.http.get('http://localhost:3000/api/getBlogs');\n  }\n}\nBlogService.ɵfac = function BlogService_Factory(t) {\n  return new (t || BlogService)(i0.ɵɵinject(i1.HttpClient));\n};\nBlogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BlogService,\n  factory: BlogService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAKA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EACzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4CCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,oCAAoC,CAAC;EACnE;;AAjDWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAK,SAAXL,WAAW;EAAAM,YAFV;AAAM","names":["BlogService","constructor","http","getBlogs","get","factory","providedIn"],"sourceRoot":"","sources":["/Users/sabrina/Desktop/mini-project/blogApplication/src/app/blog.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(private http: HttpClient) { }\n /*  getListOfBlog() {\n    return [\n      {\n        id: 1,\n        title: 'blog1',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Elya data',\n        like: 10,\n        dislike: 14\n      },\n      {\n        id: 2,\n        title: 'blog2',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'mohamed amine',\n        like: 20,\n        dislike: 14\n      },\n      {\n        id: 3,\n        title: 'blog3',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Cecilia ',\n        like: 40,\n        dislike: 14\n      },\n      {\n        id: 4,\n        title: 'blog4',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Michael jackson',\n        like: 5,\n        dislike: 14\n      },\n      {\n        id: 5,\n        title: 'blog5',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Bitcoin',\n        like: 16,\n        dislike: 14\n      }\n    ]\n  } */\n  getBlogs() {\n    return this.http.get<any[]>('http://localhost:3000/api/getBlogs');\n  }\n  \n  /* getBlogById(value: number) {\n    let list = this.getListOfBlog();\n    let blogExiste = list.filter(blog => {\n      return blog.id === value;\n    });\n    if (blogExiste.length > 0)\n      return blogExiste[0];\n    else\n      return null;\n\n  } */\n\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}