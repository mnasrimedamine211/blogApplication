{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class BlogService {\n  getListOfBlog() {\n    return [{\n      id: 1,\n      title: 'blog1',\n      description: 'test technique on angular for create a new project of blog i create this for learn angular',\n      author: 'Elya data'\n    }, {\n      id: 2,\n      title: 'blog2',\n      description: 'test technique on angular for create a new project of blog i create this for learn angular',\n      author: 'mohamed amine'\n    }, {\n      id: 3,\n      title: 'blog3',\n      description: 'test technique on angular for create a new project of blog i create this for learn angular',\n      author: 'Cecilia '\n    }, {\n      id: 4,\n      title: 'blog4',\n      description: 'test technique on angular for create a new project of blog i create this for learn angular',\n      author: 'Michael jackson'\n    }, {\n      id: 5,\n      title: 'blog5',\n      description: 'test technique on angular for create a new project of blog i create this for learn angular',\n      author: 'Bitcoin'\n    }];\n  }\n  getBlogById(value) {\n    let list = this.getListOfBlog();\n    let blogExiste = list.filter(blog => {\n      return blog.id === value;\n    });\n    if (blogExiste.length > 0) return blogExiste;else return null;\n  }\n  constructor() {}\n}\nBlogService.ɵfac = function BlogService_Factory(t) {\n  return new (t || BlogService)();\n};\nBlogService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BlogService,\n  factory: BlogService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EACtBC,aAAa;IACX,OAAO,CACL;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,4FAA4F;MACzGC,MAAM,EAAE;KACT,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,4FAA4F;MACzGC,MAAM,EAAE;KACT,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,4FAA4F;MACzGC,MAAM,EAAE;KACT,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,4FAA4F;MACzGC,MAAM,EAAE;KACT,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,OAAO;MACdC,WAAW,EAAE,4FAA4F;MACzGC,MAAM,EAAE;KACT,CACF;EACH;EACAC,WAAW,CAACC,KAAc;IACxB,IAAIC,IAAI,GAAG,IAAI,CAACP,aAAa,EAAE;IAC/B,IAAIQ,UAAU,GAAGD,IAAI,CAACE,MAAM,CAACC,IAAI,IAAG;MAClC,OAAOA,IAAI,CAACT,EAAE,KAAKK,KAAK;IAC1B,CAAC,CAAC;IACF,IAAIE,UAAU,CAACG,MAAM,GAAG,CAAC,EACvB,OAAOH,UAAU,CAAE,KAEjB,OAAO,IAAI;EAEjB;EACAI,eAAgB;;AA9CLb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["BlogService","getListOfBlog","id","title","description","author","getBlogById","value","list","blogExiste","filter","blog","length","constructor","factory","providedIn"],"sourceRoot":"","sources":["/Users/sabrina/Desktop/mini-project/blogApplication/src/app/blog.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  getListOfBlog() {\n    return [\n      {\n        id: 1,\n        title: 'blog1',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Elya data'\n      },\n      {\n        id: 2,\n        title: 'blog2',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'mohamed amine'\n      },\n      {\n        id: 3,\n        title: 'blog3',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Cecilia '\n      },\n      {\n        id: 4,\n        title: 'blog4',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Michael jackson'\n      },\n      {\n        id: 5,\n        title: 'blog5',\n        description: 'test technique on angular for create a new project of blog i create this for learn angular',\n        author: 'Bitcoin'\n      }\n    ]\n  }\n  getBlogById(value : number){\n    let list = this.getListOfBlog();\n    let blogExiste = list.filter(blog => {\n      return blog.id === value;\n    });\n    if (blogExiste.length > 0 ) \n      return blogExiste ; \n      else \n        return null; \n\n  }\n  constructor() { }\n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}